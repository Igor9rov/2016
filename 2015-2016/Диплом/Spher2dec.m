clear all;
% Заведём начальные данные
% Константа С1 
C1 = 11.372; 
R = 100000;
% Истинные координаты целей в сферических координатах
sph1 = [0 0 R];
sph2 = [0 0 R];
% Вектора расположения МФР отсносительно ПБУ в декартовых координатах
g1 = [10 10 0];
g2 = [10 10 0];
% Заведём СКО для МФР в сферических координатах
S_AZ = 0.0003;
S_R = 10;
S_EL = 0.0003;
% "Получим" данные о координатах целей от МФР сначала в сферических
xrand1SPHER = [normrnd(sph1(1),S_AZ) normrnd(sph1(2),S_EL) normrnd(sph1(3),S_R)];
xrand2SPHER = [normrnd(sph2(1),S_AZ) normrnd(sph2(2),S_EL) normrnd(sph2(3),S_R)];
% Потом в декартовые перевод
[s11,s12,s13] = sph2cart(xrand1SPHER(1), xrand1SPHER(2), xrand1SPHER(3));
[s21,s22,s23] = sph2cart(xrand2SPHER(1), xrand2SPHER(2), xrand2SPHER(3));
% Собираем в вектор
xrand1 = [s11,s12,s13];
xrand2 = [s21,s22,s23];
% Получаем координаты предполагаемых целей относительно ПБУ
L1 = xrand1 + g1;
L2 = xrand2 + g2;
% Дисперсия как квадрат СКО
D_AZ = S_AZ^2;
D_R = S_R^2;
D_EL = S_EL^2;
%Заведём матрицу перехода от сферических координат к декартовым
% Сначала для первой цели
U1_11 = -L1(2)/(L1(1)^2+L1(2)^2);
U1_12 = L1(1)/(L1(1)^2+L1(2)^2);
U1_13 = 0;
U1_21 = -(L1(1)*L1(3))/((L1(1)^2+L1(2)^2)^(1/2)*(L1(1)^2+L1(2)^2+L1(3)^2));
U1_22 = -(L1(2)*L1(3))/((L1(1)^2+L1(2)^2)^(1/2)*(L1(1)^2+L1(2)^2+L1(3)^2));
U1_23 = ((L1(1)^2+L1(2)^2)^(1/2))/(L1(1)^2+L1(2)^2+L1(3)^2);
U1_31 = L1(1)/(L1(1)^2+L1(2)^2+L1(3)^2)^(1/2);
U1_32 = L1(2)/(L1(1)^2+L1(2)^2+L1(3)^2)^(1/2);
U1_33 = L1(3)/(L1(1)^2+L1(2)^2+L1(3)^2)^(1/2);
U1 = [U1_11 U1_12 U1_13; U1_21 U1_22 U1_23; U1_31 U1_32 U1_33];
% Теперь для второй цели
U2_11 = -L2(2)/(L2(1)^2+L2(2)^2);
U2_12 = L2(1)/(L2(1)^2+L2(2)^2);
U2_13 = 0;
U2_21 = -(L2(1)*L2(3))/((L2(1)^2+L2(2)^2)^(1/2)*(L2(1)^2+L2(2)^2+L2(3)^2));
U2_22 = -(L2(2)*L2(3))/((L2(1)^2+L2(2)^2)^(1/2)*(L2(1)^2+L2(2)^2+L2(3)^2));
U2_23 = ((L2(1)^2+L2(2)^2)^(1/2))/(L2(1)^2+L2(2)^2+L2(3)^2);
U2_31 = L2(1)/(L2(1)^2+L2(2)^2+L2(3)^2)^(1/2);
U2_32 = L2(2)/(L2(1)^2+L2(2)^2+L2(3)^2)^(1/2);
U2_33 = L2(3)/(L2(1)^2+L2(2)^2+L2(3)^2)^(1/2);
U2 = [U2_11 U2_12 U2_13; U2_21 U2_22 U2_23; U2_31 U2_32 U2_33];
% Заведём ковариационную матрицу для каждого МФР в сферических координатах
Ksph = [D_AZ 0 0; 0 D_EL 0; 0 0 D_R];
% Ковариационная матрица в декартовых координатах
K1 = abs(U1'*Ksph*U1);
K2 = abs(U2'*Ksph*U2);
% Вычисления
% Находим дельта лямбда, ковариационную матрицу ошибок разности координат
DL = L1' - L2';
K = K1 + K2;
K3 = inv(K);
% Отождествление по координатам путём сравнения с порогом обобщённого
% расстояния между координатами двух трасс
h = DL'*K3*DL;
disp(h);
if h < C1
    disp('Цель одна')
else
    disp('Цели разные')
end