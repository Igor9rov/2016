Timer unit: 4.27634e-07 s

Total time: 29.3957 s
File: test.py
Function: main at line 5

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     5                                           @profile
     6                                           def main():
     7         1            6      6.0      0.0      i = 0
     8         1           22     22.0      0.0      b = []
     9         1            3      3.0      0.0      c = []
    10         1            3      3.0      0.0      k = []
    11         1            2      2.0      0.0      l = []
    12         1           49     49.0      0.0      npb = np.array([])
    13         1            9      9.0      0.0      npc = np.array([])
    14         1            7      7.0      0.0      npk = np.array([])
    15         1            7      7.0      0.0      realznach = np.array([])
    16         1          192    192.0      0.0      infile = open('train.csv', 'r')
    17         1          655    655.0      0.0      for row in csv.reader(infile, delimiter = ","):
    18         1            5      5.0      0.0          i = i+1
    19         1            3      3.0      0.0          if i == 1:
    20         1            5      5.0      0.0              break
    21                                           
    22         1            3      3.0      0.0      i=0
    23      3000       972233    324.1      1.4      for row in csv.reader(infile, delimiter = ","):
    24      3000        47901     16.0      0.1          b = row
    25      3000        40079     13.4      0.1          b = b[1:]
    26   2355000      5572180      2.4      8.1          for j in range(0,784):
    27   2352000      8072562      3.4     11.7              b[j] = int(b[j])
    28      3000     37052350  12350.8     53.9          npb = np.append(npb, b)
    29      3000       138591     46.2      0.2          c = int(row[0])
    30      3000       534755    178.3      0.8          npc = np.append(npc,c)
    31      3000        19228      6.4      0.0          i = i+1
    32      3000         9551      3.2      0.0          if i == 3000:
    33         1           15     15.0      0.0              break
    34      2999      2194599    731.8      3.2          print(i)
    35         1            3      3.0      0.0      i=0
    36      1000       281075    281.1      0.4      for row in csv.reader(infile, delimiter = ","):
    37      1000        11641     11.6      0.0          k = row
    38      1000        11460     11.5      0.0          k = k[1:]
    39    785000      1865821      2.4      2.7          for j in range(0,784):
    40    784000      2672455      3.4      3.9              k[j]=int(k[j])
    41      1000      4223149   4223.1      6.1          npk = np.append(npk, k)
    42      1000        38977     39.0      0.1          l = int(row[0])
    43      1000       147439    147.4      0.2          realznach = np.append(realznach,l)
    44      1000         6042      6.0      0.0          i = i+1
    45      1000         3115      3.1      0.0          if i == 1000:
    46         1           17     17.0      0.0              break
    47       999       655479    656.1      1.0          print(i)
    48         1          204    204.0      0.0      infile.close()
    49         1          584    584.0      0.0      print(k[2])
    50                                           
    51         1           20     20.0      0.0      npb = npb.reshape(3000,784)
    52         1            5      5.0      0.0      npk = npk.reshape(1000,784)
    53                                           
    54         1            3      3.0      0.0      C = 1.0
    55         1      3848986 3848986.0      5.6      svc = svm.LinearSVC( verbose = 1, C=C).fit(npb, npc)
    56         1        22546  22546.0      0.0      z = svc.predict(np.c_[npk])
    57         1       296303 296303.0      0.4      np.testing.assert_array_almost_equal(z,realznach)

